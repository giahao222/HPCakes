@model HPCakes.Models.news_comments

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/admin/Views/Shared/_AdminLayout.cshtml";
}


<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-red">
                <div class="panel-heading" style="background-color: #f195b2; border-color: #f195b2">
                    Thêm Mới Bình Luận
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    @using (Html.BeginForm("Edit", "news_comments", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <div class="form-group">
                                @Html.Label("Tin Tức", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("news_id", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.news_id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Tên Người Dùng", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                                </div>

                                @Html.Label("ID Phản Hồi", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownList("reply_id", ViewBag.ReplyList as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.reply_id, "", new { @class = "text-danger" })
                                </div>
                            </div>




                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.Label("Hình đại diện", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    <div id="imageContainer" style="width: 350px; height: 250px; border: 1px solid #ccc; background-size: cover; background-position: center center; background-repeat: no-repeat;"></div>
                                    <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" onchange="previewImage(event)" style="margin-top: 10px;" />
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.message, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.message, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.message, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Vị trí", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                                </div>

                                @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">

                                    @{
                                        bool hide = true;
                                    }
                                    @Html.CheckBoxFor(model => hide)

                                </div>


                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Lưu" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    }
                    <div>
                        @Html.ActionLink("Quay lại", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
    @section _Footer
{
        <script src="~/Areas/admin/Content/ckfinder/ckfinder.js"></script>
        <script src="~/Areas/admin/Content/ckeditor/ckeditor.js"></script>
        <script type="text/javascript">
            var editor = CKEDITOR.replace("detail");
            var editor = CKEDITOR.replace("detail", { height: '600px' });
            customConfig: '/Areas/admin/Content/ckeditor/config.js';
        </script>
        <script>
            function previewImage(event) {
                var reader = new FileReader();
                reader.onload = function () {
                    var output = document.getElementById('imageContainer');
                    output.style.backgroundImage = "url('" + reader.result + "')";
                    output.style.display = 'block'; // Hiển thị hình ảnh sau khi đã chọn
                };
                reader.readAsDataURL(event.target.files[0]);
            };
        </script>
    }
</div>